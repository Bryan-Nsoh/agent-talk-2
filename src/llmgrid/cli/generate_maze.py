"""CLI helper to preview maze layouts generated by the MazeGenerator."""

from __future__ import annotations

import typer

from llmgrid.env.maze_generator import MazeConfig, MazeGenerator

app = typer.Typer(add_completion=False)


@app.command()
def main(
    width: int = typer.Option(15, "--width", help="Number of columns."),
    height: int = typer.Option(15, "--height", help="Number of rows."),
    seed: int = typer.Option(0, "--seed", help="Random seed for maze carving."),
    extra_connection: float = typer.Option(
        0.1,
        "--extra-connection",
        min=0.0,
        max=1.0,
        help="Probability of adding side passages after carving (0 means pure maze).",
    ),
    samples: int = typer.Option(1, "--samples", help="Number of mazes to print."),
) -> None:
    for idx in range(samples):
        config = MazeConfig(
            width=width,
            height=height,
            seed=seed + idx,
            extra_connection_prob=extra_connection,
        )
        generator = MazeGenerator(config)
        obstacles = generator.generate(required_open_cells=[(1, 1)])
        ascii_maze = generator.render_ascii(obstacles)
        header = f"maze seed={config.seed} width={width} height={height} extra={extra_connection}"
        typer.echo(header)
        typer.echo(ascii_maze)
        if idx < samples - 1:
            typer.echo("\n" + "-" * len(header) + "\n")


if __name__ == "__main__":
    app()
